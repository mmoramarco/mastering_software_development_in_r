summarise(CHANNEL_COUNT=sum(CHANNEL_COUNT)) %>%
spread(key= CHANNEL_DSC_CLEANED, value=CHANNEL_COUNT, fill=0) %>%
mutate(GROUP = NULL) %>%
mutate(TOTAL_COUNT = CONVENIENCE.STORE + DRUG + GROCERY + MASS.MERCHANDISER + OTHER.OFF.PREMISE + WHOLESALE.CLUB)
summary_results <- temp_results %>%
mutate(CHANNEL_COUNT=1) %>%
select(CHANNEL_DSC_CLEANED,cluster_no,CHANNEL_COUNT) %>%
group_by(CHANNEL_DSC_CLEANED,cluster_no) %>%
summarise(CHANNEL_COUNT=sum(CHANNEL_COUNT)) %>%
spread(key= CHANNEL_DSC_CLEANED, value=CHANNEL_COUNT, fill=0) %>%
mutate(GROUP = "NULL") %>%
mutate(TOTAL_COUNT = CONVENIENCE.STORE + DRUG + GROCERY + MASS.MERCHANDISER + OTHER.OFF.PREMISE + WHOLESALE.CLUB)
summary_results$CONVENIENCE.STORE / summary_results$TOTAL_COUNT
summary_results$CONVENIENCE.STORE / summary_results$TOTAL_COUNT == 1
summary_results$GROUP[summary_results$CONVENIENCE.STORE / summary_results$TOTAL_COUNT == 1] <- "CONVENIENCE.STORE"
summary_results <- temp_results %>%
mutate(CHANNEL_COUNT=1) %>%
select(CHANNEL_DSC_CLEANED,cluster_no,CHANNEL_COUNT) %>%
group_by(CHANNEL_DSC_CLEANED,cluster_no) %>%
summarise(CHANNEL_COUNT=sum(CHANNEL_COUNT)) %>%
spread(key= CHANNEL_DSC_CLEANED, value=CHANNEL_COUNT, fill=0) %>%
mutate(GROUP = "NULL") %>%
mutate(TOTAL_COUNT = CONVENIENCE.STORE + DRUG + GROCERY + MASS.MERCHANDISER + OTHER.OFF.PREMISE + WHOLESALE.CLUB)
summary_results$GROUP[summary_results$CONVENIENCE.STORE / summary_results$TOTAL_COUNT == 1] <- "CONVENIENCE.STORE"
summary_results$GROUP[summary_results$DRUG / summary_results$TOTAL_COUNT == 1] <- "DRUG"
summary_results$GROUP[summary_results$GROCERY / summary_results$TOTAL_COUNT == 1] <- "GROCERY"
summary_results$GROUP[summary_results$LIQUOR / summary_results$TOTAL_COUNT == 1] <- "LIQUOR"
summary_results$GROUP[summary_results$MASS.MERCHANDISER / summary_results$TOTAL_COUNT == 1] <- "MASS.MERCHANISDER"
summary_results$GROUP[summary_results$WHOLESALE.CLUB / summary_results$TOTAL_COUNT == 1] <- "WHOLESALE.CLUB"
summary_results <- temp_results %>%
mutate(CHANNEL_COUNT=1) %>%
select(CHANNEL_DSC_CLEANED,cluster_no,CHANNEL_COUNT) %>%
group_by(CHANNEL_DSC_CLEANED,cluster_no) %>%
summarise(CHANNEL_COUNT=sum(CHANNEL_COUNT)) %>%
spread(key= CHANNEL_DSC_CLEANED, value=CHANNEL_COUNT, fill=0) %>%
mutate(GROUP = "NULL") %>%
mutate(TOTAL_COUNT = CONVENIENCE.STORE + DRUG + GROCERY + MASS.MERCHANDISER + OTHER.OFF.PREMISE + WHOLESALE.CLUB + LIQUOR)
summary_results$GROUP[summary_results$CONVENIENCE.STORE / summary_results$TOTAL_COUNT == 1] <- "CONVENIENCE.STORE"
summary_results$GROUP[summary_results$DRUG / summary_results$TOTAL_COUNT == 1] <- "DRUG"
summary_results$GROUP[summary_results$GROCERY / summary_results$TOTAL_COUNT == 1] <- "GROCERY"
summary_results$GROUP[summary_results$LIQUOR / summary_results$TOTAL_COUNT == 1] <- "LIQUOR"
summary_results$GROUP[summary_results$MASS.MERCHANDISER / summary_results$TOTAL_COUNT == 1] <- "MASS.MERCHANISDER"
summary_results$GROUP[summary_results$WHOLESALE.CLUB / summary_results$TOTAL_COUNT == 1] <- "WHOLESALE.CLUB"
summary_results <- temp_results %>%
mutate(CHANNEL_COUNT=1) %>%
select(CHANNEL_DSC_CLEANED,cluster_no,CHANNEL_COUNT) %>%
group_by(CHANNEL_DSC_CLEANED,cluster_no) %>%
summarise(CHANNEL_COUNT=sum(CHANNEL_COUNT)) %>%
spread(key= CHANNEL_DSC_CLEANED, value=CHANNEL_COUNT, fill=0) %>%
mutate(GROUP = "NULL") %>%
mutate(TOTAL_COUNT = CONVENIENCE.STORE + DRUG + GROCERY + MASS.MERCHANDISER + OTHER.OFF.PREMISE + WHOLESALE.CLUB + LIQUOR)
summary_results$GROUP[summary_results$CONVENIENCE.STORE / summary_results$TOTAL_COUNT > 0.95] <- "CONVENIENCE.STORE"
summary_results$GROUP[summary_results$DRUG / summary_results$TOTAL_COUNT > 0.95] <- "DRUG"
summary_results$GROUP[summary_results$GROCERY / summary_results$TOTAL_COUNT > 0.95] <- "GROCERY"
summary_results$GROUP[summary_results$LIQUOR / summary_results$TOTAL_COUNT > 0.95] <- "LIQUOR"
summary_results$GROUP[summary_results$MASS.MERCHANDISER / summary_results$TOTAL_COUNT > 0.95] <- "MASS.MERCHANISDER"
summary_results$GROUP[summary_results$WHOLESALE.CLUB / summary_results$TOTAL_COUNT > 0.95] <- "WHOLESALE.CLUB"
summary_results[,]
summary_results[summary_results$GROUP == "NULL",]
summary_results$GROUP[summary_results$OTHER.OFF.PREMISE / summary_results$TOTAL_COUNT > 0.95] <- "OTHER.OFF.PREMISE"
summary_results[summary_results$GROUP == "NULL",]
1490/1571
1502/1786
summary_results <- temp_results %>%
mutate(CHANNEL_COUNT=1) %>%
select(CHANNEL_DSC_CLEANED,cluster_no,CHANNEL_COUNT) %>%
group_by(CHANNEL_DSC_CLEANED,cluster_no) %>%
summarise(CHANNEL_COUNT=sum(CHANNEL_COUNT)) %>%
spread(key= CHANNEL_DSC_CLEANED, value=CHANNEL_COUNT, fill=0) %>%
mutate(GROUP = "NULL") %>%
mutate(TOTAL_COUNT = CONVENIENCE.STORE + DRUG + GROCERY + MASS.MERCHANDISER + OTHER.OFF.PREMISE + WHOLESALE.CLUB + LIQUOR)
summary_results$GROUP[summary_results$CONVENIENCE.STORE / summary_results$TOTAL_COUNT > 0.90] <- "CONVENIENCE.STORE"
summary_results$GROUP[summary_results$DRUG / summary_results$TOTAL_COUNT > 0.90] <- "DRUG"
summary_results$GROUP[summary_results$GROCERY / summary_results$TOTAL_COUNT > 0.90] <- "GROCERY"
summary_results$GROUP[summary_results$LIQUOR / summary_results$TOTAL_COUNT > 0.90] <- "LIQUOR"
summary_results$GROUP[summary_results$MASS.MERCHANDISER / summary_results$TOTAL_COUNT > 0.90] <- "MASS.MERCHANISDER"
summary_results$GROUP[summary_results$WHOLESALE.CLUB / summary_results$TOTAL_COUNT > 0.90] <- "WHOLESALE.CLUB"
summary_results$GROUP[summary_results$OTHER.OFF.PREMISE / summary_results$TOTAL_COUNT > 0.90] <- "OTHER.OFF.PREMISE"
733/1184
summary_results[summary_results$GROUP == "NULL",]
sum(summary_results[summary_results$GROUP == "NULL",TOTAL_COUNT]
)
sum(summary_results[summary_results$GROUP == "NULL","TOTAL_COUNT"])
sum(summary_results[summary_results$GROUP <> "NULL","TOTAL_COUNT"])
sum(summary_results[summary_results$GROUP != "NULL","TOTAL_COUNT"])
13110/(13110+227145)
sum(summary_results[summary_results$GROUP == "NULL","CONVIENCE.STORE"])
sum(summary_results[summary_results$GROUP == "NULL","CONVENIENCE.STORE"])
View(temp_results)
628/1133
184/376
1502/1786
library(readr)
library(dplyr)
library(RJSONIO)
library(RCurl)
setwd("~/Projects/constellation/account_segmentation")
client_id <- 'I2O1SZZEGIRJOYYDFLZUP13LSQGTLWT4WNSNA14CB4Z3XQ0B'
client_secret <- 'KJU1PVWXWWL20T0GU53ECWBXT3DYAZ3RNZUUV41TA5EBWD10'
source_data <- read_csv("data/OPEN_TDLINX_SPECTRA_DATA.csv")
cleaned_data <- source_data %>%
filter(PREMISE_TYPE_DSC == "ON PREMISE",
CHANNEL_DSC != "UNREPORTED") %>%
mutate(CHANNEL_DSC_CLEANED = CHANNEL_DSC) %>%
select(STORE_CD,STORE_NAME,ADDR_01_DSC,CITY_DSC,STATE_CD,POSTAL_CD,
LATITUDE,LONGITUDE,
LIQUOR_FLG,BEER_FLG,WINE_FLG,
CHANNEL_DSC,SUBCHANNEL_DSC,FOOD_TYPE_DSC,CHAIN_IND_FLG)
foursquare_gather <- function(store_cd, query, ll) {
venue_search_url <- paste0("https://api.foursquare.com/v2/venues/search?ll=",ll,
"&intent=match&query=",query,
"&client_id=",client_id,"&client_secret=",client_secret,
"&v=20160921")
search_result <- getURL(venue_search_url)
search_format <- fromJSON(search_result)
search_test <- search_format$meta$code
if (search_test == 200 & length(search_format$response$venues) > 0) {
venue_id <- search_format$response$venues[[1]]$id
venue_details_url <- paste0("https://api.foursquare.com/v2/venues/",
venue_id,"?client_id=",client_id,"&client_secret=",client_secret,
"&v=20160921")
details_result <- getURL(venue_details_url)
if (isValidJSON(details_result,TRUE)) {
details_format <- fromJSON(details_result)
details_test <- details_format$meta$code
if (details_test == 200) {
venue_results_build <- cbind(store_cd,
ifelse(is.null(details_format$response$venue$id),"N/A",details_format$response$venue$id),
ifelse(is.null(details_format$response$venue$name),"N/A",details_format$response$venue$name),
ifelse(is.null(details_format$response$venue$location$address),
"N/A",details_format$response$venue$location$address),
ifelse(is.null(details_format$response$venue$location$city),
"N/A",details_format$response$venue$location$city),
ifelse(is.null(details_format$response$venue$location$state),
"N/A",details_format$response$venue$location$state),
ifelse(is.null(details_format$response$venue$location$postalCode),
"N/A",details_format$response$venue$location$postalCode),
ifelse(is.null(details_format$response$venue$location$lat),
"N/A",details_format$response$venue$location$lat),
ifelse(is.null(details_format$response$venue$location$lng),
"N/A",details_format$response$venue$location$lng),
ifelse(length(details_format$response$venue$attributes$groups) == 0, "N/A",
ifelse(is.null(details_format$response$venue$attributes$groups[[1]]$summary),
"N/A",
details_format$response$venue$attributes$groups[[1]]$summary)
),
ifelse(length(details_format$response$venue$categories) == 0, "N/A",
ifelse(is.null(details_format$response$venue$categories[[1]]$name),
"N/A",
details_format$response$venue$categories[[1]]$name)
),
ifelse(is.null(details_format$response$venue$rating),
"N/A",details_format$response$venue$rating),
ifelse(is.null(details_format$response$venue$stats[[1]]),
"N/A",details_format$response$venue$stats[[1]]),
ifelse(is.null(details_format$response$venue$stats[[2]]),
"N/A",details_format$response$venue$stats[[2]]))
return(venue_results_build)
}
}
}
}
for (i in 42:394) {
complete_results_build <- cbind('store_cd','id','name','address','city',
'state','postalCode','lat','lng','price',
'category','rating','checkinsCount','userCount')
start_row = i * 1000 + 1
end_row = min(nrow(cleaned_data),(i+1)*1000)
for (j in start_row:end_row) {
store_cd <- cleaned_data$STORE_CD[j]
ll <- paste0(cleaned_data$LATITUDE[j],",",cleaned_data$LONGITUDE[j])
query <- gsub(" ", "+", cleaned_data$STORE_NAME[j])
temp_fs <- foursquare_gather(store_cd, query, ll)
if (!is.null(temp_fs)) {
complete_results_build <- rbind(complete_results_build,temp_fs)
if (j %% 10 == 0){
print(paste0("Data Row: ",j))
print(temp_fs)
}
}
Sys.sleep(0.5)
}
temp_results <- as.data.frame(complete_results_build)
names(temp_results) <- c('store_cd','id','name','address','city',
'state','postalCode','lat','lng','price','category',
'rating','checkinsCount','userCount')
temp_results <- temp_results[2:nrow(temp_results),]
file_write_path <- paste0("data/foursquare/",start_row,"_",end_row,".rds")
saveRDS(temp_results,file_write_path)
}
i
j
for (i in 45:49) {
complete_results_build <- cbind('store_cd','id','name','address','city',
'state','postalCode','lat','lng','price',
'category','rating','checkinsCount','userCount')
start_row = i * 1000 + 1
end_row = min(nrow(cleaned_data),(i+1)*1000)
for (j in start_row:end_row) {
store_cd <- cleaned_data$STORE_CD[j]
ll <- paste0(cleaned_data$LATITUDE[j],",",cleaned_data$LONGITUDE[j])
query <- gsub(" ", "+", cleaned_data$STORE_NAME[j])
temp_fs <- foursquare_gather(store_cd, query, ll)
if (!is.null(temp_fs)) {
complete_results_build <- rbind(complete_results_build,temp_fs)
if (j %% 10 == 0){
print(paste0("Data Row: ",j))
print(temp_fs)
}
}
Sys.sleep(0.5)
}
temp_results <- as.data.frame(complete_results_build)
names(temp_results) <- c('store_cd','id','name','address','city',
'state','postalCode','lat','lng','price','category',
'rating','checkinsCount','userCount')
temp_results <- temp_results[2:nrow(temp_results),]
file_write_path <- paste0("data/foursquare/",start_row,"_",end_row,".rds")
saveRDS(temp_results,file_write_path)
}
i
j
for (i in 48:49) {
complete_results_build <- cbind('store_cd','id','name','address','city',
'state','postalCode','lat','lng','price',
'category','rating','checkinsCount','userCount')
start_row = i * 1000 + 1
end_row = min(nrow(cleaned_data),(i+1)*1000)
for (j in start_row:end_row) {
store_cd <- cleaned_data$STORE_CD[j]
ll <- paste0(cleaned_data$LATITUDE[j],",",cleaned_data$LONGITUDE[j])
query <- gsub(" ", "+", cleaned_data$STORE_NAME[j])
temp_fs <- foursquare_gather(store_cd, query, ll)
if (!is.null(temp_fs)) {
complete_results_build <- rbind(complete_results_build,temp_fs)
if (j %% 2 == 0){
print(paste0("Data Row: ",j))
print(temp_fs)
}
}
Sys.sleep(1)
}
temp_results <- as.data.frame(complete_results_build)
names(temp_results) <- c('store_cd','id','name','address','city',
'state','postalCode','lat','lng','price','category',
'rating','checkinsCount','userCount')
temp_results <- temp_results[2:nrow(temp_results),]
file_write_path <- paste0("data/foursquare/",start_row,"_",end_row,".rds")
saveRDS(temp_results,file_write_path)
}
for (i in 48:394) {
complete_results_build <- cbind('store_cd','id','name','address','city',
'state','postalCode','lat','lng','price',
'category','rating','checkinsCount','userCount')
start_row = i * 1000 + 1
end_row = min(nrow(cleaned_data),(i+1)*1000)
for (j in start_row:end_row) {
store_cd <- cleaned_data$STORE_CD[j]
ll <- paste0(cleaned_data$LATITUDE[j],",",cleaned_data$LONGITUDE[j])
query <- gsub(" ", "+", cleaned_data$STORE_NAME[j])
temp_fs <- foursquare_gather(store_cd, query, ll)
if (!is.null(temp_fs)) {
complete_results_build <- rbind(complete_results_build,temp_fs)
if (j %% 2 == 0){
print(paste0("Data Row: ",j))
print(temp_fs)
}
}
Sys.sleep(1)
}
temp_results <- as.data.frame(complete_results_build)
names(temp_results) <- c('store_cd','id','name','address','city',
'state','postalCode','lat','lng','price','category',
'rating','checkinsCount','userCount')
temp_results <- temp_results[2:nrow(temp_results),]
file_write_path <- paste0("data/foursquare/",start_row,"_",end_row,".rds")
saveRDS(temp_results,file_write_path)
Sys.sleep(120)
}
for (i in 55:394) {
complete_results_build <- cbind('store_cd','id','name','address','city',
'state','postalCode','lat','lng','price',
'category','rating','checkinsCount','userCount')
start_row = i * 1000 + 1
end_row = min(nrow(cleaned_data),(i+1)*1000)
for (j in start_row:end_row) {
store_cd <- cleaned_data$STORE_CD[j]
ll <- paste0(cleaned_data$LATITUDE[j],",",cleaned_data$LONGITUDE[j])
query <- gsub(" ", "+", cleaned_data$STORE_NAME[j])
temp_fs <- foursquare_gather(store_cd, query, ll)
if (!is.null(temp_fs)) {
complete_results_build <- rbind(complete_results_build,temp_fs)
if (j %% 2 == 0){
print(paste0("Data Row: ",j))
print(temp_fs)
}
}
Sys.sleep(1)
}
temp_results <- as.data.frame(complete_results_build)
names(temp_results) <- c('store_cd','id','name','address','city',
'state','postalCode','lat','lng','price','category',
'rating','checkinsCount','userCount')
temp_results <- temp_results[2:nrow(temp_results),]
file_write_path <- paste0("data/foursquare/",start_row,"_",end_row,".rds")
saveRDS(temp_results,file_write_path)
Sys.sleep(120)
}
setwd("~/Projects/coursera/data")
library(readr)
daily <- read_csv("daily_SPEC_2014.csv.bz2")
head(daily)
names(daily)
library(dplyr)
daily_one <- daily %>%
filter("State Name" == "Wisonsin", "Parameter Name" == "Bromine PM2.5 LC")
head(daily_one)
daily_one <- daily %>%
filter("State Name" == "Wisconsin", "Parameter Name" == "Bromine PM2.5 LC")
head(daily_one)
daily_one <- daily %>%
filter("State Name" == "Wisconsin")
head(daily_one)
gsub(" ",names(daily))
gsub(" ",".",names(daily))
names(daily) <- gsub(" ",".",names(daily))
head(daily)
daily_one <- daily %>%
filter(State.Name == "Wisconsin")
head(daily_one)
table(daily_one$Parameter.Name)
daily_one <- daily %>%
filter(State.Name == "Wisconsin", Parameter.Name == "Bromine PM2.5 LC")
head(daily_one)
glimpse(daily_one)
mean(daily_one$Arithmetic.Mean)
daily_two <- daily %>%
group_by(Parameter.Name) %>%
summarise(Avg.Level = mean(Arithmetic.Mean))
head(daily_two)
daily_two <- daily %>%
group_by(Parameter.Name) %>%
summarise(Avg.Level = mean(Arithmetic.Mean, na.rm = TRUE)) %>%
sort(Avg.Level,decreasing=TRUE)
daily_two <- daily %>%
group_by(Parameter.Name) %>%
summarise(Avg.Level = mean(Arithmetic.Mean)) %>%
sort(Avg.Level,decreasing=TRUE)
daily_two <- daily %>%
group_by(Parameter.Name) %>%
summarise(Avg.Level = mean(Arithmetic.Mean)) %>%
order_by(Avg.Level)
daily_two <- daily %>%
group_by(Parameter.Name) %>%
summarise(Avg.Level = mean(Arithmetic.Mean))
daily_two
daily_two <- daily %>%
group_by(Parameter.Name) %>%
summarise(Avg.Level = mean(Arithmetic.Mean)) %>%
arrange(desc(Avg.Level))
head(daily_two)
daily_three  <- daily %>%
filter(Parameter.Name == "Sulfate PM2.5 LC") %>%
group_by(State.Code,County.Code,Site.Num) %>%
summarise(Avg.Level = mean(Arithmetic.Mean)) %>%
arrange(desc(Avg.Level))
head(daily_three)
daily_four  <- daily %>%
filter(Parameter.Name == "EC PM2.5 LC TOR", State.Name %in% c("Arizona","California")) %>%
group_by(State.Name) %>%
summarise(Avg.Level = mean(Arithmetic.Mean)) %>%
arrange(State.Name)
head(daily_four)
daily_four$Avg.Level[2]-daily_four$Avg.Level[1]
names(daily)
daily_five  <- daily %>%
filter(Parameter.Name == "OC PM2.5 LC TOR", Longitude < -100)
head(daily_five)
daily_five  <- daily %>%
filter(Parameter.Name == "OC PM2.5 LC TOR", Longitude < -100)
median(daily_five$Arithmetic.Mean)
library(readxl)
aqs_sites <- read_excel("aqs_sites.xlsx")
warnings()
aqs_sites <- read_excel("aqs_sites.xlsx",col_types=c("text"))
aqs_sites <- read_excel("aqs_sites.xlsx",col_types="text")
aqs_sites <- read_excel("aqs_sites.xlsx")
aqs_sites
names(aqs_sites) <- gsub(" ",".",names(aqs_sites))
sites_six <- aqs_sites %>%
filter(Land.Use == "RESIDENTAL", Location.Setting=="SUBURBAN")
dim(sites_six)
glimpse(aqs_sites)
sites_six <- aqs_sites %>%
filter(Land.Use == "RESIDENTIAL", Location.Setting=="SUBURBAN")
dim(sites_six)
daily_sites <- inner_join(daily,aqs_sites,by=c("State.Code","County.Code","Site.Number"))
glimpse(daily)
daily$State.Code <- as.numeric(daily$State.Code)
daily$State.Code <- as.numeric(daily$State.Code)
daily$County.Code <- as.numeric(daily$County.Code)
daily$Site.Num <- as.numeric(daily$Site.Num)
daily_sites <- inner_join(daily,aqs_sites,by=c("State.Code","County.Code","Site.Num" = "Site.Number"))
sites_seven <- daily_sites %>%
filter(Land.Use == "RESIDENTIAL", Location.Setting=="SUBURBAN")
site_seve
site_seven
sites_seven
sites_seven <- daily_sites %>%
filter(Land.Use == "RESIDENTIAL", Location.Setting=="SUBURBAN",
Parameter.Name == "EC PM2.5 LC TOR", Longitude.x = -100)
sites_seven <- daily_sites %>%
filter(Land.Use == "RESIDENTIAL", Location.Setting =="SUBURBAN",
Parameter.Name == "EC PM2.5 LC TOR", Longitude.x >= -100)
median(sites_seven$Arithmetic.Mean)
glimpse(sites_seven)
library(lubridate)
sites_eight <- daily_sites %>%
filter(Land.Use == "COMMERCIAL", Parameter.Name == "Sulfate PM2.5 LC") %>%
mutate(Mth.Name = month(Date.Local))
glimpse(sites_eight)
sites_eight <- daily_sites %>%
filter(Land.Use == "COMMERCIAL", Parameter.Name == "Sulfate PM2.5 LC") %>%
mutate(Mth.Name = month(Date.Local, label=TRUE)) %>%
group_by(Mth.Name) %>%
summarise(Avg.Level = mean(Arithmetic.Mean)) %>%
arrange(desc(Avg.Level))
sites_eight
sites_nine <- daily_sites %>%
filter(State.Code == 6, County.Code == 65, Site.Num == 8001,
Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC")) %>%
group_by(Parameter.Name,Date.Local) %>%
summarise(Avg.Level = mean(Arithmetic.Mean)) %>%
group_by(Parameter.Name) %>%
summarise(Sum.Level = sum(Avg.Level)) %>%
filter(Sum.Level > 10)
dim(sites_nine)
sites_nine
sites_nine <- daily_sites %>%
filter(State.Code == 6, County.Code == 65, Site.Num == 8001,
Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC")) %>%
group_by(Parameter.Name,Date.Local) %>%
summarise(Avg.Level = mean(Arithmetic.Mean)) %>%
group_by(Date.Local) %>%
summarise(Sum.Level = sum(Avg.Level)) %>%
filter(Sum.Level > 10)
dim(sites_nine)
sites_ten <- daily_sites %>%
filter(Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC")) %>%
group_by(State.Code, County.Code, Site.Number, Parameter.Name,Date.Local) %>%
summarise(Avg.Level = mean(Arithmetic.Mean))
sites_ten <- daily_sites %>%
filter(Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC")) %>%
group_by(State.Code, County.Code, Site.Num, Parameter.Name,Date.Local) %>%
summarise(Avg.Level = mean(Arithmetic.Mean))
head(sites_ten)
dim(sites_ten)
library(tidyr)
spread(sites_ten,Parameter.Name)
spread(sites_ten,"Parameter.Name")
spread(sites_ten,"Parameter.Name","Avg.Level")
sites_ten <- daily_sites %>%
filter(Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC")) %>%
group_by(State.Code, County.Code, Site.Num, Parameter.Name,Date.Local) %>%
summarise(Avg.Level = mean(Arithmetic.Mean))  %>%
spread(Parameter.Name,Avg.Level)
head(sites_ten)
sites_ten <- daily_sites %>%
filter(Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC"),
State.Code %in% c(5,2,16,42), County.Code %in% c(113,90,37,45), Site.Num %in% c(3,25,2)) %>%
group_by(State.Code, County.Code, Site.Num, Parameter.Name,Date.Local) %>%
summarise(Avg.Level = mean(Arithmetic.Mean))  %>%
spread(Parameter.Name,Avg.Level)
head(sites_Ten)
head(sites_ten)
dim(sites_ten)
View(sites_ten)
sites_ten <- daily_sites %>%
filter(Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC"),
State.Code %in% c(5,2,16,42), County.Code %in% c(113,90,37,45), Site.Num %in% c(3,25,2)) %>%
group_by(State.Code, County.Code, Site.Num, Parameter.Name,Date.Local) %>%
summarise(Avg.Level = mean(Arithmetic.Mean))  %>%
spread(Parameter.Name,Avg.Level) %>%
group_by(State.Code, County.Code, Site.Code) %>%
summarise(Cor.Level = cor(`Sulfate PM2.5 LC`,`Total Nitrate PM2.5 LC`))
sites_ten <- daily_sites %>%
filter(Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC"),
State.Code %in% c(5,2,16,42), County.Code %in% c(113,90,37,45), Site.Num %in% c(3,25,2)) %>%
group_by(State.Code, County.Code, Site.Num, Parameter.Name,Date.Local) %>%
summarise(Avg.Level = mean(Arithmetic.Mean))  %>%
spread(Parameter.Name,Avg.Level) %>%
group_by(State.Code, County.Code, Site.Num) %>%
summarise(Cor.Level = cor(`Sulfate PM2.5 LC`,`Total Nitrate PM2.5 LC`))
sites_ten
sites_ten <- daily_sites %>%
filter(Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC"),
State.Code %in% c(5,2,16,42), County.Code %in% c(113,90,37,45), Site.Num %in% c(3,35,2)) %>%
group_by(State.Code, County.Code, Site.Num, Parameter.Name,Date.Local) %>%
summarise(Avg.Level = mean(Arithmetic.Mean))  %>%
spread(Parameter.Name,Avg.Level) %>%
group_by(State.Code, County.Code, Site.Num) %>%
summarise(Cor.Level = cor(`Sulfate PM2.5 LC`,`Total Nitrate PM2.5 LC`))
sites_ten <- daily_sites %>%
filter(Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC"),
State.Code %in% c(5,2,16,42), County.Code %in% c(113,90,37,45), Site.Num %in% c(3,35,2)) %>%
group_by(State.Code, County.Code, Site.Num, Parameter.Name,Date.Local) %>%
summarise(Avg.Level = mean(Arithmetic.Mean))  %>%
spread(Parameter.Name,Avg.Level) %>%
group_by(State.Code, County.Code, Site.Num) %>%
summarise(Cor.Level = cor(`Sulfate PM2.5 LC`,`Total Nitrate PM2.5 LC`)) %>%
arrange(desc(Cor.Level))
sites_ten
